#!/bin/sh -login
#PBS -j oe
#PBS -l nodes=1:ppn=16,walltime=04:00:00,mem=64gb
#PBS -m a
#PBS -l feature='intel16'

# -o : tells it where to put output from your job
# -j oe : specifies that output and error messages from your job can be placed in the same location
# -l : resource requests (maximum amounts needed for each)
# -M : email address to send status updates to
# -m abe : what to send email updates about (abort, begin, end)
# -N : names your job
# -r n : tells it not to re-run the script in the case of an error (so it doesn't overwrite any results generated)
# -t 0-? : job numbers for array submission

source ~/.bash_profile

module load Trimmomatic/0.33
module load bowtie2/2.2.6
module load SAMTools/1.5
module load GATK/3.7.0
module load picardTools/1.89



cd ${PBS_O_WORKDIR} || exit


filelist=(*.F.fq) #Get a list of all sequencing files

indiv=${filelist[${PBS_ARRAYID}]} #assign indiv to be current sequence file

trimmedfile=`basename ${indiv} .fq`.trimmed.fq

if [ ! -f ${trimmedfile}_q20.sorted.bam ]
then
  java -jar $TRIM/trimmomatic SE -threads 15 -trimlog ./${indiv}.log ${indiv} ${trimmedfile} ILLUMINACLIP:../Metadata/alladaptors.fa:2:7:7 LEADING:3 TRAILING:3 MAXINFO:20:0.5 MINLEN:50
  bowtie2 --end-to-end --sensitive -x ${index} -U ${trimmedfile} -p 16 -S ${trimmedfile}.sam
  samtools view -q 20 -b -T ${genome} ${trimmedfile}.sam > ${trimmedfile}_q20.bam
  #samtools addreplacerg -r "@RG\tID:`basename ${trimmedfile} .trimmed.fq`\tPG:samtools addreplacerg\tSM:`basename ${trimmedfile} .trimmed.fq`" -o ${trimmedfile}_q20_name.bam ${trimmedfile}_q20.bam
  java -jar $PICARD/AddOrReplaceReadGroups.jar I=${trimmedfile}_q20.bam O=${trimmedfile}_q20_name.bam RGLB="lib1" RGPL="illumina" RGPU="unit1" RGSM=`basename ${trimmedfile} .trimmed.fq` RGID="${PBS_ARRAYID}"
  samtools sort ${trimmedfile}_q20_name.bam -O bam -o ${trimmedfile}_q20.sorted.bam -T bob
fi

if [ ! -f ${trimmedfile}_q20.final.bam ]
then
  samtools index ${trimmedfile}_q20.sorted.bam
  java -Xmx10g -cp $GATK -jar $GATK/GenomeAnalysisTK.jar -T RealignerTargetCreator -R ${genome} -I ${trimmedfile}_q20.sorted.bam -o ${trimmedfile}.intervals -nt 16
  java -Xmx10g -cp $GATK -jar $GATK/GenomeAnalysisTK.jar -T IndelRealigner -R ${genome} -I ${trimmedfile}_q20.sorted.bam -targetIntervals ${trimmedfile}.intervals -o ${trimmedfile}_q20.final.bam
  samtools index ${trimmedfile}_q20.final.bam
fi

if [ ! -f ${trimmedfile}_raw_variants.g.vcf ]
then
  java -Xmx10g -cp $GATK -jar $GATK/GenomeAnalysisTK.jar -T HaplotypeCaller --genotyping_mode DISCOVERY --emitRefConfidence GVCF -R ${genome} -I ${trimmedfile}_q20.final.bam -o ${trimmedfile}_raw_variants.g.vcf
fi

# Calculate next job to run

NEXT=$(( ${PBS_ARRAYID} + 200 ))

#Check to see if next job is past the maximum job id
if [ ${NEXT} -le ${MAXJOBID} ]
then
    cd ${PBS_O_WORKDIR} || exit
    qsub ../congenial-parakeet/1.1_Trim_Align.qsub -N TrimmingReads -t ${NEXT} -v genome=Indicies/RrContigs.fa.fasta,gff=/mnt/research/radishGenomics/AnalysisOfSequencingFiles/MoghePublished/Rr_gene_pseu.gff.mod,gffi="Parent",exon="exon",stranded="no",MAXJOBID=${fqT},index=Indicies/Moghe2014_BT,MapFolder="MogheMap"
fi

#qsub ../congenial-parakeet/1.2_FastQC_trimmed.qsub -N ${PBS_JOBNAME} -v MAXJOBID=${fqT}
## Expect 1425 individuals after processing plus 15 blanks

#fqT=`ls *_q20.final.bam | wc -w`
#fqT=`expr ${fqT} - 1`
#
#if [[ ${fqT} = 1439 ]]
#then
#  qsub ../congenial-parakeet/2_launchSNPcaller.sh
#fi
